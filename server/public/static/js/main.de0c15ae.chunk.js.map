{"version":3,"sources":["components/Header/index.js","pages/index.js","pages/profile.js","components/LoginModal/index.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","loggedIn","username","history","openModal","useState","anchorEl","setAnchorEl","open","Boolean","AppBar","className","onClick","e","currentTarget","style","marginRight","Menu","onClose","anchorOrigin","vertical","horizontal","keepMounted","MenuItem","push","StyledTextField","withStyles","root","TextField","SELECT_THRESHOLD_ITEMS","value","item","Index","urlInput","setUrlInput","classOrID","setClassOrID","radioValue","setRadioValue","thresholdOperator","setThresholdOperator","thresholdValue","setThresholdValue","id","label","onChange","target","variant","margin","FormLabel","component","RadioGroup","FormControlLabel","control","Radio","color","labelPlacement","Select","map","key","Button","fetch","method","body","JSON","stringify","user_id","url","selector","track_condition","condition","headers","then","response","status","console","log","catch","err","Profile","jobs","setJobs","loading","setLoading","useEffect","json","CircularProgress","fields","Card","CardContent","CardActions","size","LoginModal","login","logging","setLogging","setUsername","Modal","aria-labelledby","aria-describedby","placeholder","marginBottom","preventDefault","alert","type","App","setLoggedIn","setOpenModal","exact","path","$username","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de0c15ae.chunk.js","sourcesContent":["import React , { useState } from 'react';\r\nimport {\r\n  AppBar, MenuItem, Menu,\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport {\r\n  withRouter,\r\n} from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst Header = ({\r\n  loggedIn, username, history, openModal\r\n}) => {\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (e) => setAnchorEl(e.currentTarget);\r\n  const handleCloseMenu = () => setAnchorEl(null);\r\n  const navigateToProfile = () => {\r\n    history.push('/profile');\r\n    setAnchorEl(null);\r\n  }\r\n  return (\r\n    <AppBar>\r\n      <div className=\"header\">\r\n        <div className=\"title\">\r\n          <SearchIcon />\r\n          <h3>WebPage Change Tracker</h3>\r\n        </div>\r\n        \r\n        {loggedIn ? (\r\n          <div className=\"navigate\">\r\n            <div className=\"navigate-contents\" onClick={handleMenu}>\r\n              <AccountCircleIcon style={{ marginRight: 5 }}/>\r\n              {username}\r\n            </div>\r\n            <Menu\r\n              open={open}\r\n              onClose={handleCloseMenu}\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n            >\r\n              <MenuItem onClick={navigateToProfile}>View Trackers</MenuItem>\r\n              <MenuItem>Log out</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        ) : (\r\n          <div className=\"signUp\" onClick={openModal}>\r\n            <h4>\r\n              Log in\r\n            </h4>\r\n            \r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React, { useState } from 'react';\r\nimport '../css/index.css';\r\n\r\nimport {\r\n  TextField, RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel, Radio, Select, MenuItem, Button,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledTextField = withStyles({\r\n  root: {\r\n    // backgroundColor: 'black',\r\n  },\r\n})(TextField);\r\n\r\nconst RADIO_TRACK_CHANGE = 'Track Change';\r\nconst RADIO_TRACK_THRESHOLD = 'Track Threshold';\r\n\r\nconst SELECT_THRESHOLD_ITEMS = [\r\n  { value: '\\\"!=\\\"', item: '!=' },\r\n  { value: '\\\"=\\\"', item: '=' },\r\n  { value: '\\\"<\\\"', item: '<' },\r\n  { value: '\\\">\\\"', item: '>' },\r\n];\r\n\r\nconst Index = ({\r\n  username,\r\n}) => {\r\n  const [urlInput, setUrlInput] = useState('');\r\n  const [classOrID, setClassOrID] = useState('');\r\n  const [radioValue, setRadioValue] = useState(RADIO_TRACK_THRESHOLD);\r\n  const [thresholdOperator, setThresholdOperator] = useState('');\r\n  const [thresholdValue, setThresholdValue] = useState('');\r\n  const submitJob = () => {\r\n    fetch('/jobs', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user_id: username,\r\n        url: urlInput,\r\n        selector: classOrID,\r\n        track_condition: radioValue,\r\n        condition: thresholdOperator,\r\n        value: thresholdValue,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log('success');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log('error');\r\n      })\r\n  }\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page-content\">\r\n        <div className=\"top-page\">\r\n\r\n        </div>\r\n        <StyledTextField\r\n          id=\"url-input\"\r\n          label=\"Input URL\"\r\n          onChange={(e) => setUrlInput(e.target.value)}\r\n          value={urlInput}\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n        <StyledTextField\r\n          id=\"class-input\"\r\n          label=\"Class or ID\"\r\n          onChange={(e) => setClassOrID(e.target.value)}\r\n          value={classOrID}\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n        />\r\n          \r\n        \r\n        <FormLabel component=\"type-of-change\">\r\n\r\n        </FormLabel>\r\n        <RadioGroup\r\n          value={radioValue}\r\n          onChange={(e) => setRadioValue(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value={RADIO_TRACK_CHANGE}\r\n            control={<Radio color=\"primary\" />}\r\n            label={RADIO_TRACK_CHANGE}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value={RADIO_TRACK_THRESHOLD}\r\n            control={<Radio color=\"primary\" />}\r\n            label={RADIO_TRACK_THRESHOLD}\r\n            labelPlacement=\"start\"\r\n          />\r\n        </RadioGroup>\r\n\r\n        {radioValue === RADIO_TRACK_THRESHOLD && (\r\n          <div className=\"threshold-input\">\r\n            <Select\r\n              value={thresholdOperator}\r\n              onChange={(e) => setThresholdOperator(e.target.value)}\r\n            >\r\n              {SELECT_THRESHOLD_ITEMS.map((item) => (\r\n                <MenuItem value={item.value} key={item.item}>{item.item}</MenuItem>\r\n              ))}\r\n            </Select>\r\n            <StyledTextField\r\n              id=\"threshold-input\"\r\n              label=\"Threshold Value\"\r\n              onChange={(e) => setThresholdValue(e.target.value)}\r\n              value={thresholdValue}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n            />\r\n          </div>\r\n        ) }\r\n        \r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={submitJob}\r\n        >\r\n          Submit\r\n        </Button>\r\n        {/* <button onClick={fetchItems}>Fetch</button> */}\r\n      \r\n        \r\n   \r\n\r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card, CardContent, CardActions,\r\n  Button, CircularProgress } from '@material-ui/core';\r\n\r\nimport '../css/profile.css';\r\n\r\nconst Profile = ({\r\n  username,\r\n}) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    fetch(`/jobs?user_id=${username}`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response);\r\n        setLoading(false);\r\n        setJobs(response);\r\n      });\r\n  }, []);\r\n\r\n  const deleteJob = (id) => {\r\n    fetch('/jobs', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        user_id: username,\r\n        id,\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page-content\">\r\n        {loading ? (\r\n          <CircularProgress style={{ margin: 30 }}/>\r\n        ) : (\r\n          <div className=\"job-containers\">\r\n            {jobs.map(({fields}) => (\r\n              <Card key={fields.id}>\r\n                <CardContent>\r\n                  {fields.url}\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\" \r\n                    onClick={() => {\r\n                      deleteJob(fields.id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { Modal, TextField, Button, CircularProgress } from '@material-ui/core';\r\nimport './styles.css';\r\n\r\nconst LoginModal = ({\r\n  open, onClose, login,\r\n}) => {\r\n  const [logging, setLogging] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n\r\n  const sendLogin = (e) => {\r\n    e.preventDefault();\r\n    setLogging(true);\r\n    fetch('/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user_id: username,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          login(username);\r\n        } else {\r\n          alert('err')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      })\r\n  }\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <div className=\"modal\">\r\n        <div className=\"modal-contents\">\r\n          <h3>\r\n            Log in\r\n          </h3>\r\n          {logging ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <form className=\"login-contents\">\r\n              <TextField\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                placeholder=\"Type your username...\"\r\n                style={{ marginBottom: 20 }}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={sendLogin}\r\n                type=\"submit\"\r\n              >\r\n                <span>Log in</span>\r\n              </Button>\r\n            </form>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Index from './pages/index';\r\nimport Profile from './pages/profile';\r\n\r\nimport LoginModal from './components/LoginModal';\r\n\r\nconst App = () => { \r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('Hello');\r\n  const [openModal, setOpenModal] = useState(true);\r\n\r\n  const handleLogin = ($username) => {\r\n    setLoggedIn(true);\r\n    setUsername($username);\r\n    setOpenModal(false);\r\n  }\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header\r\n          loggedIn={loggedIn}\r\n          username={username}\r\n          openModal={() => setOpenModal(true)}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Index\r\n              username={username}\r\n              loggedIn={loggedIn}\r\n            />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n            <Profile\r\n              username={username}\r\n              loggedIn={loggedIn}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n        <LoginModal\r\n          open={openModal}\r\n          onClose={() => setOpenModal(false)}\r\n          login={handleLogin}\r\n        />\r\n        \r\n      </div>\r\n    </Router>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}